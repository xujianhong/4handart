package com.daomingedu.art.di.module;

import com.daomingedu.art.mvp.model.entity.GradeBean;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.List;
import javax.annotation.Generated;

@Generated(
  value = "dagger.internal.codegen.ComponentProcessor",
  comments = "https://google.github.io/dagger"
)
public final class HomeModule_ProvideGradesFactory implements Factory<List<GradeBean>> {
  private final HomeModule module;

  public HomeModule_ProvideGradesFactory(HomeModule module) {
    this.module = module;
  }

  @Override
  public List<GradeBean> get() {
    return provideInstance(module);
  }

  public static List<GradeBean> provideInstance(HomeModule module) {
    return proxyProvideGrades(module);
  }

  public static HomeModule_ProvideGradesFactory create(HomeModule module) {
    return new HomeModule_ProvideGradesFactory(module);
  }

  public static List<GradeBean> proxyProvideGrades(HomeModule instance) {
    return Preconditions.checkNotNull(
        instance.provideGrades(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
