package com.daomingedu.art.di.module;

import com.daomingedu.art.mvp.contract.ForgetPasswordContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.annotation.Generated;

@Generated(
  value = "dagger.internal.codegen.ComponentProcessor",
  comments = "https://google.github.io/dagger"
)
public final class ForgetPasswordModule_ProvideForgetPasswordViewFactory
    implements Factory<ForgetPasswordContract.View> {
  private final ForgetPasswordModule module;

  public ForgetPasswordModule_ProvideForgetPasswordViewFactory(ForgetPasswordModule module) {
    this.module = module;
  }

  @Override
  public ForgetPasswordContract.View get() {
    return provideInstance(module);
  }

  public static ForgetPasswordContract.View provideInstance(ForgetPasswordModule module) {
    return proxyProvideForgetPasswordView(module);
  }

  public static ForgetPasswordModule_ProvideForgetPasswordViewFactory create(
      ForgetPasswordModule module) {
    return new ForgetPasswordModule_ProvideForgetPasswordViewFactory(module);
  }

  public static ForgetPasswordContract.View proxyProvideForgetPasswordView(
      ForgetPasswordModule instance) {
    return Preconditions.checkNotNull(
        instance.provideForgetPasswordView(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
