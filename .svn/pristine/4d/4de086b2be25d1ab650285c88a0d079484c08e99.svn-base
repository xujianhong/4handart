package com.daomingedu.art.mvp.model.api.cache;

import java.lang.System;

/**
 * ================================================
 * 展示 [RxCache.using] 中需要传入的 Providers 的使用方式
 *
 *
 * Created by JessYan on 08/30/2016 13:53
 * [Contact me](mailto:jess.yan.effort@gmail.com)
 * [Follow me](https://github.com/JessYanCoding)
 * ================================================
 */
@kotlin.Metadata(mv = {1, 1, 15}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000&\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010 \n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\bf\u0018\u00002\u00020\u0001J>\u0010\u0002\u001a\u0014\u0012\u0010\u0012\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00010\u00050\u00040\u00032\u0012\u0010\u0006\u001a\u000e\u0012\n\u0012\b\u0012\u0004\u0012\u00020\u00010\u00050\u00032\u0006\u0010\u0007\u001a\u00020\b2\u0006\u0010\t\u001a\u00020\nH\'\u00a8\u0006\u000b"}, d2 = {"Lcom/daomingedu/art/mvp/model/api/cache/CommonCache;", "", "getUsers", "Lio/reactivex/Observable;", "Lio/rx_cache2/Reply;", "", "users", "idLastUserQueried", "Lio/rx_cache2/DynamicKey;", "evictProvider", "Lio/rx_cache2/EvictProvider;", "app_release"})
public abstract interface CommonCache {
    
    @org.jetbrains.annotations.NotNull()
    @io.rx_cache2.LifeCache(duration = 2L, timeUnit = java.util.concurrent.TimeUnit.MINUTES)
    public abstract io.reactivex.Observable<io.rx_cache2.Reply<java.util.List<java.lang.Object>>> getUsers(@org.jetbrains.annotations.NotNull()
    io.reactivex.Observable<java.util.List<java.lang.Object>> users, @org.jetbrains.annotations.NotNull()
    io.rx_cache2.DynamicKey idLastUserQueried, @org.jetbrains.annotations.NotNull()
    io.rx_cache2.EvictProvider evictProvider);
}