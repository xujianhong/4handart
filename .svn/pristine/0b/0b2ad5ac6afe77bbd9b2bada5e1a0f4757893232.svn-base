package com.daomingedu.art.app;

import java.lang.System;

/**
 * ================================================
 * 展示 [GlobalHttpHandler] 的用法
 *
 *
 * Created by JessYan on 04/09/2017 17:06
 * [Contact me](mailto:jess.yan.effort@gmail.com)
 * [Follow me](https://github.com/JessYanCoding)
 * ================================================
 */
@kotlin.Metadata(mv = {1, 1, 15}, bv = {1, 0, 3}, k = 1, d1 = {"\u0000.\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u000e\n\u0002\b\u0002\u0018\u00002\u00020\u0001B\r\u0012\u0006\u0010\u0002\u001a\u00020\u0003\u00a2\u0006\u0002\u0010\u0004J\u0018\u0010\u0005\u001a\u00020\u00062\u0006\u0010\u0007\u001a\u00020\b2\u0006\u0010\t\u001a\u00020\u0006H\u0016J\"\u0010\n\u001a\u00020\u000b2\b\u0010\f\u001a\u0004\u0018\u00010\r2\u0006\u0010\u0007\u001a\u00020\b2\u0006\u0010\u000e\u001a\u00020\u000bH\u0016R\u000e\u0010\u0002\u001a\u00020\u0003X\u0082\u0004\u00a2\u0006\u0002\n\u0000\u00a8\u0006\u000f"}, d2 = {"Lcom/daomingedu/art/app/GlobalHttpHandlerImpl;", "Lcom/jess/arms/http/GlobalHttpHandler;", "context", "Landroid/content/Context;", "(Landroid/content/Context;)V", "onHttpRequestBefore", "Lokhttp3/Request;", "chain", "Lokhttp3/Interceptor$Chain;", "request", "onHttpResultResponse", "Lokhttp3/Response;", "httpResult", "", "response", "app_release"})
public final class GlobalHttpHandlerImpl implements com.jess.arms.http.GlobalHttpHandler {
    private final android.content.Context context = null;
    
    /**
     * 这里可以先客户端一步拿到每一次 Http 请求的结果, 可以先解析成 Json, 再做一些操作, 如检测到 token 过期后
     * 重新请求 token, 并重新执行请求
     *
     * @param httpResult 服务器返回的结果 (已被框架自动转换为字符串)
     * @param chain      [Interceptor.Chain]
     * @param response   [Response]
     * @return [Response]
     */
    @org.jetbrains.annotations.NotNull()
    @java.lang.Override()
    public okhttp3.Response onHttpResultResponse(@org.jetbrains.annotations.Nullable()
    java.lang.String httpResult, @org.jetbrains.annotations.NotNull()
    okhttp3.Interceptor.Chain chain, @org.jetbrains.annotations.NotNull()
    okhttp3.Response response) {
        return null;
    }
    
    /**
     * 这里可以在请求服务器之前拿到 [Request], 做一些操作比如给 [Request] 统一添加 token 或者 header 以及参数加密等操作
     *
     * @param chain   [Interceptor.Chain]
     * @param request [Request]
     * @return [Request]
     */
    @org.jetbrains.annotations.NotNull()
    @java.lang.Override()
    public okhttp3.Request onHttpRequestBefore(@org.jetbrains.annotations.NotNull()
    okhttp3.Interceptor.Chain chain, @org.jetbrains.annotations.NotNull()
    okhttp3.Request request) {
        return null;
    }
    
    public GlobalHttpHandlerImpl(@org.jetbrains.annotations.NotNull()
    android.content.Context context) {
        super();
    }
}