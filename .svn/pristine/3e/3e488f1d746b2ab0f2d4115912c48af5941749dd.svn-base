package com.daomingedu.art.mvp.ui.activity;

import com.daomingedu.art.mvp.presenter.CertificationPresenter;
import com.jess.arms.base.BaseActivity_MembersInjector;
import dagger.MembersInjector;
import javax.annotation.Generated;
import javax.inject.Provider;

@Generated(
  value = "dagger.internal.codegen.ComponentProcessor",
  comments = "https://google.github.io/dagger"
)
public final class CertificationActivity_MembersInjector
    implements MembersInjector<CertificationActivity> {
  private final Provider<CertificationPresenter> mPresenterProvider;

  public CertificationActivity_MembersInjector(
      Provider<CertificationPresenter> mPresenterProvider) {
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<CertificationActivity> create(
      Provider<CertificationPresenter> mPresenterProvider) {
    return new CertificationActivity_MembersInjector(mPresenterProvider);
  }

  @Override
  public void injectMembers(CertificationActivity instance) {
    BaseActivity_MembersInjector.injectMPresenter(instance, mPresenterProvider.get());
  }
}
